["Neo4j Graph Schema for Forklift Crane Maintenance Chatbot\n\n## Nodes\n\n1. System\n   - Label: System\n   - Properties:\n     - name: STRING (e.g., \"Engine\", \"Hydraulic\")\n\n2. Subsystem (or Part)\n   - Label: Subsystem\n   - Properties:\n     - name: STRING (e.g., \"Cold Start\", \"Actuator\")\n\n3. IssueType\n   - ", "Label: IssueType\n   - Properties:\n     - description: STRING (e.g., \"Performance Issue\", \"Warning Alarm\")\n\n4. Symptom\n   - Label: Symptom\n   - Properties:\n     - text: STRING (e.g., \"Hard to start in cold conditions\")\n\n5. DiagnosticClue\n   - Label: DiagnosticClue\n   - Properties:\n     - text: STRING", " (e.g., \"Slow cranking or no combustion\")\n\n6. InspectionCheckpoint\n   - Label: InspectionCheckpoint\n   - Properties:\n     - text: STRING (e.g., \"Battery voltage, glow plug, fuel quality\")\n\n7. CorrectiveAction\n   - Label: Action\n   - Properties:\n     - text: STRING (e.g., \"Use warm-up, check glow plu", "gs, replace cold fuel\")\n\n## Relationships\n\n- (System)-[:HAS_SUBSYSTEM]->(Subsystem)\n  - A System may have multiple Subsystems.\n\n- (Subsystem)-[:HAS_ISSUE]->(IssueType)\n  - A Subsystem may be associated with multiple IssueTypes.\n\n- (IssueType)-[:MANIFESTS_AS_SYMPTOM]->(Symptom)\n  - An IssueType can m", "anifest in multiple Symptoms.\n\n- (Symptom)-[:DIAGNOSED_BY]->(DiagnosticClue)\n  - A Symptom leads to one or more DiagnosticClues.\n\n- (DiagnosticClue)-[:CHECKPOINT_AT]->(InspectionCheckpoint)\n  - A DiagnosticClue points to one or more InspectionCheckpoints.\n\n- (InspectionCheckpoint)-[:LEADS_TO_ACTION]", "->(Action)\n  - An InspectionCheckpoint may lead to multiple CorrectiveActions.\n\n- (Action)-[:RESOLVES_ISSUE]->(IssueType)\n  - A CorrectiveAction is intended to resolve an IssueType.\n\n## Example Cypher for Constraints\n\n```cypher\nCREATE CONSTRAINT ON (s:System) ASSERT s.name IS UNIQUE;\nCREATE CONSTRAI", "NT ON (ss:Subsystem) ASSERT ss.name IS UNIQUE;\nCREATE CONSTRAINT ON (i:IssueType) ASSERT i.description IS UNIQUE;\n```\n\n## Example Node Creation\n\n```cypher\nMERGE (sys:System {name: 'Engine'})\nMERGE (sub:Subsystem {name: 'Cold Start'})\nMERGE (sys)-[:HAS_SUBSYSTEM]->(sub)\n```\n\n## Example Full Ingestion", " Pattern\n\nFor each record in your CSV/text data:\n```cypher\nLOAD CSV WITH HEADERS FROM 'file:///maintenance_records.csv' AS row\nMERGE (sys:System {name: row.System})\nMERGE (sub:Subsystem {name: row.Subsystem})\nMERGE (iss:IssueType {description: row.`Issue Type`})\nMERGE (sym:Symptom {text: row.`Sympto", "m / Failure Mode`})\nMERGE (diag:DiagnosticClue {text: row.`Diagnostic Clue`})\nMERGE (chk:InspectionCheckpoint {text: row.`Inspection / Checkpoint`})\nMERGE (act:Action {text: row.`Corrective Action`})\nMERGE (sys)-[:HAS_SUBSYSTEM]->(sub)\nMERGE (sub)-[:HAS_ISSUE]->(iss)\nMERGE (iss)-[:MANIFESTS_AS_SYMPT", "OM]->(sym)\nMERGE (sym)-[:DIAGNOSED_BY]->(diag)\nMERGE (diag)-[:CHECKPOINT_AT]->(chk)\nMERGE (chk)-[:LEADS_TO_ACTION]->(act)\nMERGE (act)-[:RESOLVES_ISSUE]->(iss);\n```\n\nThis schema will allow both structural graph queries and, if you add vector embeddings to nodes, semantic RAG lookups over your mainten", "ance knowledge base.\n"]